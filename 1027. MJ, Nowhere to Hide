#include <iostream>
#include <string>
#include <algorithm>
using namespace std;
//储存结果集合的结构
struct answerSet{
	string maja;
	string main_id;
};
//快排函数所需的比较函数，根据主Id进行排序
int compare(const void* a, const void* b){
	if( (*(answerSet*)a).main_id > (*(answerSet*)b).main_id )
		return 1;
	else 
	    return 0;
}
int main(){
	int n;
	while(cin>>n&&n!=0){
		string hold_ID_IP[25][2];
		//动态分配储存空间
		int* assist = new int[n];
		answerSet* answer = new answerSet[n/2];
		for(int i = 0; i < n; i++){
			cin>>hold_ID_IP[i][0];
			cin>>hold_ID_IP[i][1];
			assist[i] = 0;
		}
		//内嵌循环遍历相同Ip地址的ID，并将其存下
		for(int i = 0,k = 0; i < n; i++){
			if(assist[i] == 0)
				for(int j = i+1; j < n; j++){
					if(hold_ID_IP[i][1] == hold_ID_IP[j][1]){
						answer[k].main_id = hold_ID_IP[i][0];
						answer[k].maja = hold_ID_IP[j][0];
						k++;
						assist[i] = 1;
						assist[j] = 1;
					}
				}
		}
		//按照main_id进行排序
		qsort(answer,n/2,sizeof(answerSet),compare);
		//格式化输出
		for(int i = 0; i < n/2; i++){
			cout<<answer[i].maja<<" is the MaJia of "<<answer[i].main_id<<endl;
		}
		cout<<endl;
	}
	return 0;
}

